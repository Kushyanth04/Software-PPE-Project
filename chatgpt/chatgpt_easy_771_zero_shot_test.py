import sys
sys.path.insert(0, 'C:/Users/kushy/Desktop/SE_PROJECT - Main/dataset_leetcode/dataset_20241126_193530/easy_771_jewels_and_stones')
import pytest
from easy_771_jewels_and_stones_solution import Solution

class TestSolution:
    @pytest.mark.parametrize("jewels, stones, expected", [
        ("aA", "aAAbbbb", 3),
        ("z", "ZZ", 0),
        ("abc", "abcabc", 6),
        ("ABC", "abcabc", 0),
        ("", "abc", 0),
        ("abc", "", 0),
        ("a", "a", 1),
        ("A", "a", 0),
        ("a", "A", 0),
        ("aA", "aA", 2),
        ("aA", "aAA", 3),
        ("aA", "aAAA", 4),
        ("aA", "aAAAA", 5),
        ("aA", "aAAAAA", 6),
        ("aA", "aAAAAAA", 7),
        ("aA", "aAAAAAAA", 8),
        ("aA", "aAAAAAAAA", 9),
        ("aA", "aAAAAAAAAA", 10),
        ("aA", "aAAAAAAAAAA", 11),
        ("aA", "aAAAAAAAAAAA", 12),
        ("aA", "aAAAAAAAAAAAA", 13),
        ("aA", "aAAAAAAAAAAAAA", 14),
        ("aA", "aAAAAAAAAAAAAAA", 15),
        ("aA", "aAAAAAAAAAAAAAAA", 16),
        ("aA", "aAAAAAAAAAAAAAAAA", 17),
        ("aA", "aAAAAAAAAAAAAAAAAA", 18),
        ("aA", "aAAAAAAAAAAAAAAAAAA", 19),
        ("aA", "aAAAAAAAAAAAAAAAAAAA", 20),
        ("aA", "aAAAAAAAAAAAAAAAAAAAA", 21),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAA", 22),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAA", 23),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAA", 24),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAA", 25),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAA", 26),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAA", 27),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAA", 28),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 29),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 30),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 31),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 32),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 33),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 34),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 35),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 36),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 37),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 38),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 39),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 40),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 41),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 42),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 43),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 44),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 45),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 46),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 47),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 48),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 49),
        ("aA", "aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", 50),
    ])
    def test_numJewelsInStones(self, jewels: str, stones: str, expected: int):
        solution = Solution()
        assert solution.numJewelsInStones(jewels, stones) == expected